// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

package com.py.kafka.base;

public final class KafkaMessage {
  private KafkaMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   **
   * 消息类型
   * </pre>
   *
   * Protobuf enum {@code elinmessage.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MT_UNKNOWN = 0;</code>
     */
    MT_UNKNOWN(0),
    /**
     * <pre>
     * 请求消息
     * </pre>
     *
     * <code>MT_REQ = 10;</code>
     */
    MT_REQ(10),
    /**
     * <pre>
     * 应答消息
     * </pre>
     *
     * <code>MT_RSP = 11;</code>
     */
    MT_RSP(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MT_UNKNOWN = 0;</code>
     */
    public static final int MT_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * 请求消息
     * </pre>
     *
     * <code>MT_REQ = 10;</code>
     */
    public static final int MT_REQ_VALUE = 10;
    /**
     * <pre>
     * 应答消息
     * </pre>
     *
     * <code>MT_RSP = 11;</code>
     */
    public static final int MT_RSP_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return MT_UNKNOWN;
        case 10: return MT_REQ;
        case 11: return MT_RSP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return KafkaMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:elinmessage.MessageType)
  }

  public interface MessageWrapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:elinmessage.MessageWrap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.elinmessage.MessageType messageType = 1;</code>
     */
    int getMessageTypeValue();
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.elinmessage.MessageType messageType = 1;</code>
     */
    KafkaMessage.MessageType getMessageType();

    /**
     * <pre>
     * 发票数据请求消息
     * </pre>
     *
     * <code>.elinmessage.MessageReq messageReq = 2;</code>
     */
    KafkaMessage.MessageReq getMessageReq();
    /**
     * <pre>
     * 发票数据请求消息
     * </pre>
     *
     * <code>.elinmessage.MessageReq messageReq = 2;</code>
     */
    KafkaMessage.MessageReqOrBuilder getMessageReqOrBuilder();

    /**
     * <pre>
     * 发票数据应答消息
     * </pre>
     *
     * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
     */
    KafkaMessage.MessageRsp getMessageRsp();
    /**
     * <pre>
     * 发票数据应答消息
     * </pre>
     *
     * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
     */
    KafkaMessage.MessageRspOrBuilder getMessageRspOrBuilder();

    public KafkaMessage.MessageWrap.MessageCase getMessageCase();
  }
  /**
   * <pre>
   **
   * 消息封装格式
   * </pre>
   *
   * Protobuf type {@code elinmessage.MessageWrap}
   */
  public  static final class MessageWrap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:elinmessage.MessageWrap)
      MessageWrapOrBuilder {
    // Use MessageWrap.newBuilder() to construct.
    private MessageWrap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageWrap() {
      messageType_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MessageWrap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              messageType_ = rawValue;
              break;
            }
            case 18: {
              KafkaMessage.MessageReq.Builder subBuilder = null;
              if (messageCase_ == 2) {
                subBuilder = ((KafkaMessage.MessageReq) message_).toBuilder();
              }
              message_ =
                  input.readMessage(KafkaMessage.MessageReq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((KafkaMessage.MessageReq) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 2;
              break;
            }
            case 26: {
              KafkaMessage.MessageRsp.Builder subBuilder = null;
              if (messageCase_ == 3) {
                subBuilder = ((KafkaMessage.MessageRsp) message_).toBuilder();
              }
              message_ =
                  input.readMessage(KafkaMessage.MessageRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((KafkaMessage.MessageRsp) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 3;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KafkaMessage.internal_static_elinmessage_MessageWrap_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KafkaMessage.internal_static_elinmessage_MessageWrap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KafkaMessage.MessageWrap.class, KafkaMessage.MessageWrap.Builder.class);
    }

    private int messageCase_ = 0;
    private Object message_;
    public enum MessageCase
        implements com.google.protobuf.Internal.EnumLite {
      MESSAGEREQ(2),
      MESSAGERSP(3),
      MESSAGE_NOT_SET(0);
      private final int value;
      private MessageCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static MessageCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageCase forNumber(int value) {
        switch (value) {
          case 2: return MESSAGEREQ;
          case 3: return MESSAGERSP;
          case 0: return MESSAGE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MessageCase
    getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messageType_;
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.elinmessage.MessageType messageType = 1;</code>
     */
    public int getMessageTypeValue() {
      return messageType_;
    }
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>.elinmessage.MessageType messageType = 1;</code>
     */
    public KafkaMessage.MessageType getMessageType() {
      KafkaMessage.MessageType result = KafkaMessage.MessageType.valueOf(messageType_);
      return result == null ? KafkaMessage.MessageType.UNRECOGNIZED : result;
    }

    public static final int MESSAGEREQ_FIELD_NUMBER = 2;
    /**
     * <pre>
     * 发票数据请求消息
     * </pre>
     *
     * <code>.elinmessage.MessageReq messageReq = 2;</code>
     */
    public KafkaMessage.MessageReq getMessageReq() {
      if (messageCase_ == 2) {
         return (KafkaMessage.MessageReq) message_;
      }
      return KafkaMessage.MessageReq.getDefaultInstance();
    }
    /**
     * <pre>
     * 发票数据请求消息
     * </pre>
     *
     * <code>.elinmessage.MessageReq messageReq = 2;</code>
     */
    public KafkaMessage.MessageReqOrBuilder getMessageReqOrBuilder() {
      if (messageCase_ == 2) {
         return (KafkaMessage.MessageReq) message_;
      }
      return KafkaMessage.MessageReq.getDefaultInstance();
    }

    public static final int MESSAGERSP_FIELD_NUMBER = 3;
    /**
     * <pre>
     * 发票数据应答消息
     * </pre>
     *
     * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
     */
    public KafkaMessage.MessageRsp getMessageRsp() {
      if (messageCase_ == 3) {
         return (KafkaMessage.MessageRsp) message_;
      }
      return KafkaMessage.MessageRsp.getDefaultInstance();
    }
    /**
     * <pre>
     * 发票数据应答消息
     * </pre>
     *
     * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
     */
    public KafkaMessage.MessageRspOrBuilder getMessageRspOrBuilder() {
      if (messageCase_ == 3) {
         return (KafkaMessage.MessageRsp) message_;
      }
      return KafkaMessage.MessageRsp.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageType_ != KafkaMessage.MessageType.MT_UNKNOWN.getNumber()) {
        output.writeEnum(1, messageType_);
      }
      if (messageCase_ == 2) {
        output.writeMessage(2, (KafkaMessage.MessageReq) message_);
      }
      if (messageCase_ == 3) {
        output.writeMessage(3, (KafkaMessage.MessageRsp) message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageType_ != KafkaMessage.MessageType.MT_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (messageCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (KafkaMessage.MessageReq) message_);
      }
      if (messageCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (KafkaMessage.MessageRsp) message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof KafkaMessage.MessageWrap)) {
        return super.equals(obj);
      }
      KafkaMessage.MessageWrap other = (KafkaMessage.MessageWrap) obj;

      boolean result = true;
      result = result && messageType_ == other.messageType_;
      result = result && getMessageCase().equals(
          other.getMessageCase());
      if (!result) return false;
      switch (messageCase_) {
        case 2:
          result = result && getMessageReq()
              .equals(other.getMessageReq());
          break;
        case 3:
          result = result && getMessageRsp()
              .equals(other.getMessageRsp());
          break;
        case 0:
        default:
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGETYPE_FIELD_NUMBER;
      hash = (53 * hash) + messageType_;
      switch (messageCase_) {
        case 2:
          hash = (37 * hash) + MESSAGEREQ_FIELD_NUMBER;
          hash = (53 * hash) + getMessageReq().hashCode();
          break;
        case 3:
          hash = (37 * hash) + MESSAGERSP_FIELD_NUMBER;
          hash = (53 * hash) + getMessageRsp().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static KafkaMessage.MessageWrap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageWrap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageWrap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static KafkaMessage.MessageWrap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageWrap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageWrap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(KafkaMessage.MessageWrap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * 消息封装格式
     * </pre>
     *
     * Protobuf type {@code elinmessage.MessageWrap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:elinmessage.MessageWrap)
        KafkaMessage.MessageWrapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KafkaMessage.internal_static_elinmessage_MessageWrap_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KafkaMessage.internal_static_elinmessage_MessageWrap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KafkaMessage.MessageWrap.class, KafkaMessage.MessageWrap.Builder.class);
      }

      // Construct using com.py.kafka.base.KafkaMessage.MessageWrap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        messageType_ = 0;

        messageCase_ = 0;
        message_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KafkaMessage.internal_static_elinmessage_MessageWrap_descriptor;
      }

      public KafkaMessage.MessageWrap getDefaultInstanceForType() {
        return KafkaMessage.MessageWrap.getDefaultInstance();
      }

      public KafkaMessage.MessageWrap build() {
        KafkaMessage.MessageWrap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public KafkaMessage.MessageWrap buildPartial() {
        KafkaMessage.MessageWrap result = new KafkaMessage.MessageWrap(this);
        result.messageType_ = messageType_;
        if (messageCase_ == 2) {
          if (messageReqBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = messageReqBuilder_.build();
          }
        }
        if (messageCase_ == 3) {
          if (messageRspBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = messageRspBuilder_.build();
          }
        }
        result.messageCase_ = messageCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KafkaMessage.MessageWrap) {
          return mergeFrom((KafkaMessage.MessageWrap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KafkaMessage.MessageWrap other) {
        if (other == KafkaMessage.MessageWrap.getDefaultInstance()) return this;
        if (other.messageType_ != 0) {
          setMessageTypeValue(other.getMessageTypeValue());
        }
        switch (other.getMessageCase()) {
          case MESSAGEREQ: {
            mergeMessageReq(other.getMessageReq());
            break;
          }
          case MESSAGERSP: {
            mergeMessageRsp(other.getMessageRsp());
            break;
          }
          case MESSAGE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KafkaMessage.MessageWrap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KafkaMessage.MessageWrap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int messageCase_ = 0;
      private Object message_;
      public MessageCase
          getMessageCase() {
        return MessageCase.forNumber(
            messageCase_);
      }

      public Builder clearMessage() {
        messageCase_ = 0;
        message_ = null;
        onChanged();
        return this;
      }


      private int messageType_ = 0;
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.elinmessage.MessageType messageType = 1;</code>
       */
      public int getMessageTypeValue() {
        return messageType_;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.elinmessage.MessageType messageType = 1;</code>
       */
      public Builder setMessageTypeValue(int value) {
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.elinmessage.MessageType messageType = 1;</code>
       */
      public KafkaMessage.MessageType getMessageType() {
        KafkaMessage.MessageType result = KafkaMessage.MessageType.valueOf(messageType_);
        return result == null ? KafkaMessage.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.elinmessage.MessageType messageType = 1;</code>
       */
      public Builder setMessageType(KafkaMessage.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>.elinmessage.MessageType messageType = 1;</code>
       */
      public Builder clearMessageType() {

        messageType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          MessageReq, MessageReq.Builder, MessageReqOrBuilder> messageReqBuilder_;
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public KafkaMessage.MessageReq getMessageReq() {
        if (messageReqBuilder_ == null) {
          if (messageCase_ == 2) {
            return (KafkaMessage.MessageReq) message_;
          }
          return KafkaMessage.MessageReq.getDefaultInstance();
        } else {
          if (messageCase_ == 2) {
            return messageReqBuilder_.getMessage();
          }
          return KafkaMessage.MessageReq.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public Builder setMessageReq(KafkaMessage.MessageReq value) {
        if (messageReqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          messageReqBuilder_.setMessage(value);
        }
        messageCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public Builder setMessageReq(
          KafkaMessage.MessageReq.Builder builderForValue) {
        if (messageReqBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          messageReqBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public Builder mergeMessageReq(KafkaMessage.MessageReq value) {
        if (messageReqBuilder_ == null) {
          if (messageCase_ == 2 &&
              message_ != KafkaMessage.MessageReq.getDefaultInstance()) {
            message_ = KafkaMessage.MessageReq.newBuilder((KafkaMessage.MessageReq) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 2) {
            messageReqBuilder_.mergeFrom(value);
          }
          messageReqBuilder_.setMessage(value);
        }
        messageCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public Builder clearMessageReq() {
        if (messageReqBuilder_ == null) {
          if (messageCase_ == 2) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 2) {
            messageCase_ = 0;
            message_ = null;
          }
          messageReqBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public KafkaMessage.MessageReq.Builder getMessageReqBuilder() {
        return getMessageReqFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      public KafkaMessage.MessageReqOrBuilder getMessageReqOrBuilder() {
        if ((messageCase_ == 2) && (messageReqBuilder_ != null)) {
          return messageReqBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 2) {
            return (KafkaMessage.MessageReq) message_;
          }
          return KafkaMessage.MessageReq.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 发票数据请求消息
       * </pre>
       *
       * <code>.elinmessage.MessageReq messageReq = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MessageReq, MessageReq.Builder, MessageReqOrBuilder>
          getMessageReqFieldBuilder() {
        if (messageReqBuilder_ == null) {
          if (!(messageCase_ == 2)) {
            message_ = KafkaMessage.MessageReq.getDefaultInstance();
          }
          messageReqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MessageReq, MessageReq.Builder, MessageReqOrBuilder>(
                  (KafkaMessage.MessageReq) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 2;
        onChanged();;
        return messageReqBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          MessageRsp, MessageRsp.Builder, MessageRspOrBuilder> messageRspBuilder_;
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public KafkaMessage.MessageRsp getMessageRsp() {
        if (messageRspBuilder_ == null) {
          if (messageCase_ == 3) {
            return (KafkaMessage.MessageRsp) message_;
          }
          return KafkaMessage.MessageRsp.getDefaultInstance();
        } else {
          if (messageCase_ == 3) {
            return messageRspBuilder_.getMessage();
          }
          return KafkaMessage.MessageRsp.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public Builder setMessageRsp(KafkaMessage.MessageRsp value) {
        if (messageRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          messageRspBuilder_.setMessage(value);
        }
        messageCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public Builder setMessageRsp(
          KafkaMessage.MessageRsp.Builder builderForValue) {
        if (messageRspBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          messageRspBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public Builder mergeMessageRsp(KafkaMessage.MessageRsp value) {
        if (messageRspBuilder_ == null) {
          if (messageCase_ == 3 &&
              message_ != KafkaMessage.MessageRsp.getDefaultInstance()) {
            message_ = KafkaMessage.MessageRsp.newBuilder((KafkaMessage.MessageRsp) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 3) {
            messageRspBuilder_.mergeFrom(value);
          }
          messageRspBuilder_.setMessage(value);
        }
        messageCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public Builder clearMessageRsp() {
        if (messageRspBuilder_ == null) {
          if (messageCase_ == 3) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 3) {
            messageCase_ = 0;
            message_ = null;
          }
          messageRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public KafkaMessage.MessageRsp.Builder getMessageRspBuilder() {
        return getMessageRspFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      public KafkaMessage.MessageRspOrBuilder getMessageRspOrBuilder() {
        if ((messageCase_ == 3) && (messageRspBuilder_ != null)) {
          return messageRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 3) {
            return (KafkaMessage.MessageRsp) message_;
          }
          return KafkaMessage.MessageRsp.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 发票数据应答消息
       * </pre>
       *
       * <code>.elinmessage.MessageRsp messageRsp = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MessageRsp, MessageRsp.Builder, MessageRspOrBuilder>
          getMessageRspFieldBuilder() {
        if (messageRspBuilder_ == null) {
          if (!(messageCase_ == 3)) {
            message_ = KafkaMessage.MessageRsp.getDefaultInstance();
          }
          messageRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MessageRsp, MessageRsp.Builder, MessageRspOrBuilder>(
                  (KafkaMessage.MessageRsp) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 3;
        onChanged();;
        return messageRspBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:elinmessage.MessageWrap)
    }

    // @@protoc_insertion_point(class_scope:elinmessage.MessageWrap)
    private static final KafkaMessage.MessageWrap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KafkaMessage.MessageWrap();
    }

    public static KafkaMessage.MessageWrap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageWrap>
        PARSER = new com.google.protobuf.AbstractParser<MessageWrap>() {
      public MessageWrap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageWrap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageWrap> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MessageWrap> getParserForType() {
      return PARSER;
    }

    public KafkaMessage.MessageWrap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:elinmessage.MessageReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string reqId = 1;</code>
     */
    String getReqId();
    /**
     * <code>string reqId = 1;</code>
     */
    com.google.protobuf.ByteString
        getReqIdBytes();

    /**
     * <code>string message = 2;</code>
     */
    String getMessage();
    /**
     * <code>string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   **
   * 请求消息
   * </pre>
   *
   * Protobuf type {@code elinmessage.MessageReq}
   */
  public  static final class MessageReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:elinmessage.MessageReq)
      MessageReqOrBuilder {
    // Use MessageReq.newBuilder() to construct.
    private MessageReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageReq() {
      reqId_ = "";
      message_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MessageReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              reqId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KafkaMessage.internal_static_elinmessage_MessageReq_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KafkaMessage.internal_static_elinmessage_MessageReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KafkaMessage.MessageReq.class, KafkaMessage.MessageReq.Builder.class);
    }

    public static final int REQID_FIELD_NUMBER = 1;
    private volatile Object reqId_;
    /**
     * <code>string reqId = 1;</code>
     */
    public String getReqId() {
      Object ref = reqId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        reqId_ = s;
        return s;
      }
    }
    /**
     * <code>string reqId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getReqIdBytes() {
      Object ref = reqId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        reqId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile Object message_;
    /**
     * <code>string message = 2;</code>
     */
    public String getMessage() {
      Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getReqIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, reqId_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getReqIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, reqId_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof KafkaMessage.MessageReq)) {
        return super.equals(obj);
      }
      KafkaMessage.MessageReq other = (KafkaMessage.MessageReq) obj;

      boolean result = true;
      result = result && getReqId()
          .equals(other.getReqId());
      result = result && getMessage()
          .equals(other.getMessage());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQID_FIELD_NUMBER;
      hash = (53 * hash) + getReqId().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static KafkaMessage.MessageReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static KafkaMessage.MessageReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static KafkaMessage.MessageReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(KafkaMessage.MessageReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * 请求消息
     * </pre>
     *
     * Protobuf type {@code elinmessage.MessageReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:elinmessage.MessageReq)
        KafkaMessage.MessageReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KafkaMessage.internal_static_elinmessage_MessageReq_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KafkaMessage.internal_static_elinmessage_MessageReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KafkaMessage.MessageReq.class, KafkaMessage.MessageReq.Builder.class);
      }

      // Construct using com.py.kafka.base.KafkaMessage.MessageReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        reqId_ = "";

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KafkaMessage.internal_static_elinmessage_MessageReq_descriptor;
      }

      public KafkaMessage.MessageReq getDefaultInstanceForType() {
        return KafkaMessage.MessageReq.getDefaultInstance();
      }

      public KafkaMessage.MessageReq build() {
        KafkaMessage.MessageReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public KafkaMessage.MessageReq buildPartial() {
        KafkaMessage.MessageReq result = new KafkaMessage.MessageReq(this);
        result.reqId_ = reqId_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KafkaMessage.MessageReq) {
          return mergeFrom((KafkaMessage.MessageReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KafkaMessage.MessageReq other) {
        if (other == KafkaMessage.MessageReq.getDefaultInstance()) return this;
        if (!other.getReqId().isEmpty()) {
          reqId_ = other.reqId_;
          onChanged();
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KafkaMessage.MessageReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KafkaMessage.MessageReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object reqId_ = "";
      /**
       * <code>string reqId = 1;</code>
       */
      public String getReqId() {
        Object ref = reqId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          reqId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string reqId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getReqIdBytes() {
        Object ref = reqId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          reqId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string reqId = 1;</code>
       */
      public Builder setReqId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        reqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string reqId = 1;</code>
       */
      public Builder clearReqId() {

        reqId_ = getDefaultInstance().getReqId();
        onChanged();
        return this;
      }
      /**
       * <code>string reqId = 1;</code>
       */
      public Builder setReqIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        reqId_ = value;
        onChanged();
        return this;
      }

      private Object message_ = "";
      /**
       * <code>string message = 2;</code>
       */
      public String getMessage() {
        Object ref = message_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder setMessage(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:elinmessage.MessageReq)
    }

    // @@protoc_insertion_point(class_scope:elinmessage.MessageReq)
    private static final KafkaMessage.MessageReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KafkaMessage.MessageReq();
    }

    public static KafkaMessage.MessageReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageReq>
        PARSER = new com.google.protobuf.AbstractParser<MessageReq>() {
      public MessageReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageReq> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MessageReq> getParserForType() {
      return PARSER;
    }

    public KafkaMessage.MessageReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:elinmessage.MessageRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string rspId = 1;</code>
     */
    String getRspId();
    /**
     * <code>string rspId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRspIdBytes();

    /**
     * <code>string message = 2;</code>
     */
    String getMessage();
    /**
     * <code>string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   **
   * 发票数据同步应答消息
   * </pre>
   *
   * Protobuf type {@code elinmessage.MessageRsp}
   */
  public  static final class MessageRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:elinmessage.MessageRsp)
      MessageRspOrBuilder {
    // Use MessageRsp.newBuilder() to construct.
    private MessageRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageRsp() {
      rspId_ = "";
      message_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MessageRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              rspId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KafkaMessage.internal_static_elinmessage_MessageRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KafkaMessage.internal_static_elinmessage_MessageRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KafkaMessage.MessageRsp.class, KafkaMessage.MessageRsp.Builder.class);
    }

    public static final int RSPID_FIELD_NUMBER = 1;
    private volatile Object rspId_;
    /**
     * <code>string rspId = 1;</code>
     */
    public String getRspId() {
      Object ref = rspId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rspId_ = s;
        return s;
      }
    }
    /**
     * <code>string rspId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRspIdBytes() {
      Object ref = rspId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rspId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile Object message_;
    /**
     * <code>string message = 2;</code>
     */
    public String getMessage() {
      Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRspIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rspId_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRspIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rspId_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof KafkaMessage.MessageRsp)) {
        return super.equals(obj);
      }
      KafkaMessage.MessageRsp other = (KafkaMessage.MessageRsp) obj;

      boolean result = true;
      result = result && getRspId()
          .equals(other.getRspId());
      result = result && getMessage()
          .equals(other.getMessage());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RSPID_FIELD_NUMBER;
      hash = (53 * hash) + getRspId().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static KafkaMessage.MessageRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KafkaMessage.MessageRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static KafkaMessage.MessageRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KafkaMessage.MessageRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(KafkaMessage.MessageRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * 发票数据同步应答消息
     * </pre>
     *
     * Protobuf type {@code elinmessage.MessageRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:elinmessage.MessageRsp)
        KafkaMessage.MessageRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KafkaMessage.internal_static_elinmessage_MessageRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KafkaMessage.internal_static_elinmessage_MessageRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KafkaMessage.MessageRsp.class, KafkaMessage.MessageRsp.Builder.class);
      }

      // Construct using com.py.kafka.base.KafkaMessage.MessageRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        rspId_ = "";

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KafkaMessage.internal_static_elinmessage_MessageRsp_descriptor;
      }

      public KafkaMessage.MessageRsp getDefaultInstanceForType() {
        return KafkaMessage.MessageRsp.getDefaultInstance();
      }

      public KafkaMessage.MessageRsp build() {
        KafkaMessage.MessageRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public KafkaMessage.MessageRsp buildPartial() {
        KafkaMessage.MessageRsp result = new KafkaMessage.MessageRsp(this);
        result.rspId_ = rspId_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KafkaMessage.MessageRsp) {
          return mergeFrom((KafkaMessage.MessageRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KafkaMessage.MessageRsp other) {
        if (other == KafkaMessage.MessageRsp.getDefaultInstance()) return this;
        if (!other.getRspId().isEmpty()) {
          rspId_ = other.rspId_;
          onChanged();
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KafkaMessage.MessageRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KafkaMessage.MessageRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object rspId_ = "";
      /**
       * <code>string rspId = 1;</code>
       */
      public String getRspId() {
        Object ref = rspId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rspId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string rspId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRspIdBytes() {
        Object ref = rspId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rspId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string rspId = 1;</code>
       */
      public Builder setRspId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        rspId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string rspId = 1;</code>
       */
      public Builder clearRspId() {

        rspId_ = getDefaultInstance().getRspId();
        onChanged();
        return this;
      }
      /**
       * <code>string rspId = 1;</code>
       */
      public Builder setRspIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        rspId_ = value;
        onChanged();
        return this;
      }

      private Object message_ = "";
      /**
       * <code>string message = 2;</code>
       */
      public String getMessage() {
        Object ref = message_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder setMessage(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:elinmessage.MessageRsp)
    }

    // @@protoc_insertion_point(class_scope:elinmessage.MessageRsp)
    private static final KafkaMessage.MessageRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KafkaMessage.MessageRsp();
    }

    public static KafkaMessage.MessageRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageRsp>
        PARSER = new com.google.protobuf.AbstractParser<MessageRsp>() {
      public MessageRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MessageRsp> getParserForType() {
      return PARSER;
    }

    public KafkaMessage.MessageRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_elinmessage_MessageWrap_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_elinmessage_MessageWrap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_elinmessage_MessageReq_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_elinmessage_MessageReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_elinmessage_MessageRsp_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_elinmessage_MessageRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rMessage.proto\022\013elinmessage\"\245\001\n\013Message" +
      "Wrap\022-\n\013messageType\030\001 \001(\0162\030.elinmessage." +
      "MessageType\022-\n\nmessageReq\030\002 \001(\0132\027.elinme" +
      "ssage.MessageReqH\000\022-\n\nmessageRsp\030\003 \001(\0132\027" +
      ".elinmessage.MessageRspH\000B\t\n\007message\",\n\n" +
      "MessageReq\022\r\n\005reqId\030\001 \001(\t\022\017\n\007message\030\002 \001" +
      "(\t\",\n\nMessageRsp\022\r\n\005rspId\030\001 \001(\t\022\017\n\007messa" +
      "ge\030\002 \001(\t*5\n\013MessageType\022\016\n\nMT_UNKNOWN\020\000\022" +
      "\n\n\006MT_REQ\020\n\022\n\n\006MT_RSP\020\013B!\n\021com.py.kafka." +
      "baseB\014KafkaMessageb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_elinmessage_MessageWrap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_elinmessage_MessageWrap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_elinmessage_MessageWrap_descriptor,
        new String[] { "MessageType", "MessageReq", "MessageRsp", "Message", });
    internal_static_elinmessage_MessageReq_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_elinmessage_MessageReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_elinmessage_MessageReq_descriptor,
        new String[] { "ReqId", "Message", });
    internal_static_elinmessage_MessageRsp_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_elinmessage_MessageRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_elinmessage_MessageRsp_descriptor,
        new String[] { "RspId", "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
